{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  // ...\n} from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations:[\n    trigger('openClose', [\n      state('open', style({\n        backgroundColor: '#F7F6F1'\n      })),\n      state('closed', style({\n        backgroundColor: '#012B79'\n      })),\n      transition('open => closed', [\n        animate('1s')\n      ]),\n      transition('closed => open', [\n        animate('1s')\n      ]),\n    ]),\n  ]\n})\nexport class AppComponent {\n  title = 'profile';\n  isOpen = true;\n  readonly linkedIn = 'https://www.linkedin.com/in/julia-roldi/';\n  readonly github = 'https://github.com/juliacomj';\n  readonly gmail = 'mailto:julialcantara.ra@gmail.com?Subject=Oi';\n\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  goToLink(link: string){\n    window.location.href = link;\n  }\n\n}\n","\n\n\n<div [@openClose]=\"isOpen ? 'open' : 'closed'\" class=\"open-close-container\">\n  <img aria-hidden=\"true\" class=\"waves-up\" src=\"../assets/svg (3).png\" alt=\"\">\n   <div class=\"content\">\n    <div class=\"toggle\" aria-hidden=\"true\">\n      <img src=\"https://img.icons8.com/clouds/100/000000/smiling-sun.png\"/>\n      <mat-slide-toggle (change)=toggle() ></mat-slide-toggle >\n      <img src=\"https://img.icons8.com/clouds/100/000000/bright-moon.png\"/>\n     </div>\n      <img src=\"../assets/69506484cfd4faae5922a495bf186077-sticker.png\" aria-hidden=\"true\">\n      <div class=\"title\" [ngClass]=\"{'title-dark': !isOpen}\">\n        <p>JÃºlia Roldi</p>\n        <p>Front-end Developer</p>\n      </div>\n      <div  class=\"icons\">\n        <img (click)=goToLink(github)  src=\"../assets/github-logo.svg\" alt=\"Clique para github\">\n        <img (click)=goToLink(gmail)  src=\"../assets/gmail.svg\" alt=\"Clique para gmail\">\n        <img (click)=goToLink(linkedIn)  src=\"../assets/linkedin (1).svg\" alt=\"Clique para LinkedIn\">\n      </div>\n\n   </div>\n   <img aria-hidden=\"true\" class=\"waves-down\" src=\"../assets/svg.png\" alt=\"\">\n</div>\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatSlideToggleModule,\n    ScullyLibModule,\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}